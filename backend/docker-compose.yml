services:
  backend:
    env_file:
      - ./app/.env
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: django_backend
    command: ["sh", "-c", "python /app_container/manage.py makemigrations && python /app_container/manage.py makemigrations api && python /app_container/manage.py migrate && gunicorn config.wsgi:application --bind 0.0.0.0:8000"]
    volumes:
      - ./app:/app_container
    ports:
      - "8000:8000"
    depends_on:
      - postgres_db
      - redis
    networks:
      - app-network

  postgres_db:
    image: postgres:15
    container_name: postgres_db
    volumes:
      - postgres-data:/var/lib/postgresql/datas
    env_file:
      - ./app/.env
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis_cache
    networks:
      - app-network

  celery_worker:
    build:
      context: ./app
    container_name: app-container_celery_worker
    command: ["celery", "-A", "scraping.scraping", "worker", "--loglevel=info"]
    volumes:
      - ./app:/app_container
    depends_on:
      - backend
      - redis
    networks:
      - app-network
    env_file:
      - ./app/.env

  celery_beat:
    build:
      context: ./app
    container_name: app-container_celery_beat
    command: ["celery", "-A", "scraping.scraping", "beat", "--loglevel=info"]
    volumes:
      - ./app:/app_container
    depends_on:
      - backend
      - redis
    env_file:
      - ./app/.env
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    external: true

volumes:
  postgres-data:
    driver: local